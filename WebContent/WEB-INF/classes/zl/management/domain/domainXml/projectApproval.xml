<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zl.management.domain.ProjectApproval">
	<insert id="add" parameterType="ProjectApproval">
		insert into projectApproval(
		entryName, projectNumber, personInCharge, staffNumber,
		subordinateUnit, projectNature, projectLevel, projectMembers,
		projectYear, projectClassification, projectSubclass, projectStatus,
		isChange, postponed, approvalNumber, projectSourceUnit,
		rank,
		projectTime, startTime, plannedCompletionDate,
		dateOfEntry,
		gradeOfKnot, actualCompletionTime, formOfAchievement,
		subTopic,
		typeOfContract, contractFunds, outlayCardNumber,
		matchingFunds,
		matchingCardNumber, fileBox, disciplineCategory,
		subjectClassification, projectSource, researchCategory,
		nationalBigEconomy, nationalMiddleEconomy, formOfCooperation,
		socioEconomicGoals, auditStatus, remarks, titleOfPersonInCharge,
		startStopTime, arrivalExpenses, expenditure,
		managementFees)values(#{entryName}, #{projectNumber},
		#{personInCharge}, #{staffNumber}, #{subordinateUnit},
		#{projectNature}, #{projectLevel}, #{projectMembers}, #{projectYear},
		#{projectClassification}, #{projectSubclass}, #{projectStatus},
		#{isChange}, #{postponed}, #{approvalNumber}, #{projectSourceUnit},
		#{rank}, #{projectTime}, #{startTime},
		#{plannedCompletionDate},
		#{dateOfEntry}, #{gradeOfKnot},
		#{actualCompletionTime},
		#{formOfAchievement}, #{subTopic},
		#{typeOfContract}, #{contractFunds},
		#{outlayCardNumber},
		#{matchingFunds}, #{matchingCardNumber},
		#{fileBox},
		#{disciplineCategory}, #{subjectClassification},
		#{projectSource},
		#{researchCategory}, #{nationalBigEconomy},
		#{nationalMiddleEconomy},
		#{formOfCooperation}, #{socioEconomicGoals},
		#{auditStatus},
		#{remarks}, #{titleOfPersonInCharge}, #{startStopTime},
		#{arrivalExpenses}, #{expenditure}, #{managementFees})

	</insert>

	<update id="update" parameterType="ProjectApproval">
		update projectApproval set
		entryName=#{entryName}, projectNumber=#{projectNumber},
		personInCharge=#{personInCharge}, staffNumber=#{staffNumber},
		subordinateUnit=#{subordinateUnit}, projectNature=#{projectNature},
		projectLevel=#{projectLevel}, projectMembers=#{projectMembers},
		projectYear=#{projectYear},
		projectClassification=#{projectClassification},
		projectSubclass=#{projectSubclass}, projectStatus=#{projectStatus},
		isChange=#{isChange}, postponed=#{postponed},
		approvalNumber=#{approvalNumber},
		projectSourceUnit=#{projectSourceUnit},
		rank=#{rank},
		projectTime=#{projectTime}, startTime=#{startTime},
		plannedCompletionDate=#{plannedCompletionDate},
		dateOfEntry=#{dateOfEntry}, gradeOfKnot=#{gradeOfKnot},
		actualCompletionTime=#{actualCompletionTime},
		formOfAchievement=#{formOfAchievement}, subTopic=#{subTopic},
		typeOfContract=#{typeOfContract}, contractFunds=#{contractFunds},
		outlayCardNumber=#{outlayCardNumber}, matchingFunds=#{matchingFunds},
		matchingCardNumber=#{matchingCardNumber}, fileBox=#{fileBox},
		disciplineCategory=#{disciplineCategory},
		subjectClassification=#{subjectClassification},
		projectSource=#{projectSource}, researchCategory=#{researchCategory},
		nationalBigEconomy=#{nationalBigEconomy},
		nationalMiddleEconomy=#{nationalMiddleEconomy},
		formOfCooperation=#{formOfCooperation},
		socioEconomicGoals=#{socioEconomicGoals}, auditStatus=#{auditStatus},
		remarks=#{remarks}, titleOfPersonInCharge=#{titleOfPersonInCharge},
		startStopTime=#{startStopTime}, arrivalExpenses=#{arrivalExpenses},
		expenditure=#{expenditure}, managementFees=#{managementFees}
		where id
		=
		#{id}
	</update>


	<delete id="delete" parameterType="int">
		delete from projectApproval
		where
		id =
		#{id}
	</delete>

	<select id="load" parameterType="int" resultType="ProjectApproval">
		select * from
		projectApproval where id = #{id}
	</select>

	<select id="loadByName" parameterType="String" resultType="ProjectApproval">
		select * from projectApproval where entryName = #{entryName}
	</select>

	<select id="find" parameterType="Map" resultType="ProjectApproval">
		select * from projectApproval
		<where>
			<if test="entryName != null and entryName != '%%'">
				(entryName like #{entryName})
			</if>
			<if test="projectNumber != null and projectNumber != ''">
				(projectNumber = #{projectNumber})
			</if>
			<if test="personInCharge != null and personInCharge != ''">
				(personInCharge = #{personInCharge})
			</if>
			<if test="staffNumber != null and staffNumber != ''">
				(staffNumber = #{staffNumber})
			</if>
			<if test="subordinateUnit != null and subordinateUnit != ''">
				(subordinateUnit = #{subordinateUnit})
			</if>
			<if test="projectNature != null and projectNature != ''">
				(projectNature = #{projectNature})
			</if>
			<if test="projectLevel != null and projectLevel != ''">
				(projectLevel = #{projectLevel})
			</if>
			<if test="projectMembers != null and projectMembers != '%%'">
				(projectMembers like #{projectMembers})
			</if>
			<if test="projectYear != null and projectYear != ''">
				(projectYear = #{projectYear})
			</if>
			<if test="projectClassification != null and projectClassification != ''">
				(projectClassification = #{projectClassification})
			</if>
			<if test="projectSubclass != null and projectSubclass != ''">
				(projectSubclass = #{projectSubclass})
			</if>
			<if test="projectStatus != null and projectStatus != ''">
				(projectStatus = #{projectStatus})
			</if>
			<if test="isChange != null and isChange != ''">
				(isChange = #{isChange})
			</if>
			<if test="postponed != null and postponed != ''">
				(postponed = #{postponed})
			</if>
			<if test="approvalNumber != null and approvalNumber != ''">
				(approvalNumber = #{approvalNumber})
			</if>
			<if test="projectSourceUnit != null and projectSourceUnit != ''">
				(projectSourceUnit = #{projectSourceUnit})
			</if>
			<if test="rank != null and rank != ''">
				(rank = #{rank})
			</if>
			<if test="projectTime != null and projectTime != ''">
				(projectTime = #{projectTime})
			</if>
			<if test="startTime != null and startTime != ''">
				(startTime = #{startTime})
			</if>
			<if test="plannedCompletionDate != null and plannedCompletionDate != ''">
				(plannedCompletionDate = #{plannedCompletionDate})
			</if>
			<if test="dateOfEntry != null and dateOfEntry != ''">
				(dateOfEntry = #{dateOfEntry})
			</if>
			<if test="gradeOfKnot != null and gradeOfKnot != ''">
				(gradeOfKnot = #{gradeOfKnot})
			</if>
			<if test="actualCompletionTime != null and actualCompletionTime != ''">
				(actualCompletionTime = #{actualCompletionTime})
			</if>
			<if test="formOfAchievement != null and formOfAchievement != ''">
				(formOfAchievement = #{formOfAchievement})
			</if>
			<if test="subTopic != null and subTopic != ''">
				(subTopic = #{subTopic})
			</if>
			<if test="typeOfContract != null and typeOfContract != ''">
				(typeOfContract = #{typeOfContract})
			</if>
			<if test="contractFunds != null and contractFunds != ''">
				(contractFunds = #{contractFunds})
			</if>
			<if test="outlayCardNumber != null and outlayCardNumber != ''">
				(outlayCardNumber = #{outlayCardNumber})
			</if>
			<if test="matchingFunds != null and matchingFunds != ''">
				(matchingFunds = #{matchingFunds})
			</if>
			<if test="matchingCardNumber != null and matchingCardNumber != ''">
				(matchingCardNumber = #{matchingCardNumber})
			</if>
			<if test="fileBox != null and fileBox != ''">
				(fileBox = #{fileBox})
			</if>
			<if test="disciplineCategory != null and disciplineCategory != ''">
				(disciplineCategory = #{disciplineCategory})
			</if>
			<if test="subjectClassification != null and subjectClassification != ''">
				(subjectClassification = #{subjectClassification})
			</if>
			<if test="projectSource != null and projectSource != ''">
				(projectSource = #{projectSource})
			</if>
			<if test="researchCategory != null and researchCategory != ''">
				(researchCategory = #{researchCategory})
			</if>
			<if test="nationalBigEconomy != null and nationalBigEconomy != ''">
				(nationalBigEconomy = #{nationalBigEconomy})
			</if>
			<if test="nationalMiddleEconomy != null and nationalMiddleEconomy != ''">
				(nationalMiddleEconomy = #{nationalMiddleEconomy})
			</if>
			<if test="formOfCooperation != null and formOfCooperation != ''">
				(formOfCooperation = #{formOfCooperation})
			</if>
			<if test="socioEconomicGoals != null and socioEconomicGoals != ''">
				(socioEconomicGoals = #{socioEconomicGoals})
			</if>
			<if test="auditStatus != null and auditStatus != ''">
				(auditStatus = #{auditStatus})
			</if>
			<if test="remarks != null and remarks != ''">
				(remarks = #{remarks})
			</if>
			<if test="titleOfPersonInCharge != null and titleOfPersonInCharge != ''">
				(titleOfPersonInCharge = #{titleOfPersonInCharge})
			</if>
			<if test="startStopTime != null and startStopTime != ''">
				(startStopTime = #{startStopTime})
			</if>
			<if test="arrivalExpenses != null and arrivalExpenses != ''">
				(arrivalExpenses = #{arrivalExpenses})
			</if>
			<if test="expenditure != null and expenditure != ''">
				(expenditure = #{expenditure})
			</if>
			<if test="managementFees != null and managementFees != ''">
				(managementFees = #{managementFees})
			</if>

		</where>
		limit #{pageOffset}, #{pageSize}
	</select>

	<select id="find_count" parameterType="Map" resultType="int">
		select
		count(*) from projectApproval
		<where>

			<if test="entryName != null and entryName != '%%'">
				(entryName like #{entryName})
			</if>
			<if test="projectNumber != null and projectNumber != ''">
				(projectNumber = #{projectNumber})
			</if>
			<if test="personInCharge != null and personInCharge != ''">
				(personInCharge = #{personInCharge})
			</if>
			<if test="staffNumber != null and staffNumber != ''">
				(staffNumber = #{staffNumber})
			</if>
			<if test="subordinateUnit != null and subordinateUnit != ''">
				(subordinateUnit = #{subordinateUnit})
			</if>
			<if test="projectNature != null and projectNature != ''">
				(projectNature = #{projectNature})
			</if>
			<if test="projectLevel != null and projectLevel != ''">
				(projectLevel = #{projectLevel})
			</if>
			<if test="projectMembers != null and projectMembers != '%%'">
				(projectMembers like #{projectMembers})
			</if>
			<if test="projectYear != null and projectYear != ''">
				(projectYear = #{projectYear})
			</if>
			<if test="projectClassification != null and projectClassification != ''">
				(projectClassification = #{projectClassification})
			</if>
			<if test="projectSubclass != null and projectSubclass != ''">
				(projectSubclass = #{projectSubclass})
			</if>
			<if test="projectStatus != null and projectStatus != ''">
				(projectStatus = #{projectStatus})
			</if>
			<if test="isChange != null and isChange != ''">
				(isChange = #{isChange})
			</if>
			<if test="postponed != null and postponed != ''">
				(postponed = #{postponed})
			</if>
			<if test="approvalNumber != null and approvalNumber != ''">
				(approvalNumber = #{approvalNumber})
			</if>
			<if test="projectSourceUnit != null and projectSourceUnit != ''">
				(projectSourceUnit = #{projectSourceUnit})
			</if>
			<if test="rank != null and rank != ''">
				(rank = #{rank})
			</if>
			<if test="projectTime != null and projectTime != ''">
				(projectTime = #{projectTime})
			</if>
			<if test="startTime != null and startTime != ''">
				(startTime = #{startTime})
			</if>
			<if test="plannedCompletionDate != null and plannedCompletionDate != ''">
				(plannedCompletionDate = #{plannedCompletionDate})
			</if>
			<if test="dateOfEntry != null and dateOfEntry != ''">
				(dateOfEntry = #{dateOfEntry})
			</if>
			<if test="gradeOfKnot != null and gradeOfKnot != ''">
				(gradeOfKnot = #{gradeOfKnot})
			</if>
			<if test="actualCompletionTime != null and actualCompletionTime != ''">
				(actualCompletionTime = #{actualCompletionTime})
			</if>
			<if test="formOfAchievement != null and formOfAchievement != ''">
				(formOfAchievement = #{formOfAchievement})
			</if>
			<if test="subTopic != null and subTopic != ''">
				(subTopic = #{subTopic})
			</if>
			<if test="typeOfContract != null and typeOfContract != ''">
				(typeOfContract = #{typeOfContract})
			</if>
			<if test="contractFunds != null and contractFunds != ''">
				(contractFunds = #{contractFunds})
			</if>
			<if test="outlayCardNumber != null and outlayCardNumber != ''">
				(outlayCardNumber = #{outlayCardNumber})
			</if>
			<if test="matchingFunds != null and matchingFunds != ''">
				(matchingFunds = #{matchingFunds})
			</if>
			<if test="matchingCardNumber != null and matchingCardNumber != ''">
				(matchingCardNumber = #{matchingCardNumber})
			</if>
			<if test="fileBox != null and fileBox != ''">
				(fileBox = #{fileBox})
			</if>
			<if test="disciplineCategory != null and disciplineCategory != ''">
				(disciplineCategory = #{disciplineCategory})
			</if>
			<if test="subjectClassification != null and subjectClassification != ''">
				(subjectClassification = #{subjectClassification})
			</if>
			<if test="projectSource != null and projectSource != ''">
				(projectSource = #{projectSource})
			</if>
			<if test="researchCategory != null and researchCategory != ''">
				(researchCategory = #{researchCategory})
			</if>
			<if test="nationalBigEconomy != null and nationalBigEconomy != ''">
				(nationalBigEconomy = #{nationalBigEconomy})
			</if>
			<if test="nationalMiddleEconomy != null and nationalMiddleEconomy != ''">
				(nationalMiddleEconomy = #{nationalMiddleEconomy})
			</if>
			<if test="formOfCooperation != null and formOfCooperation != ''">
				(formOfCooperation = #{formOfCooperation})
			</if>
			<if test="socioEconomicGoals != null and socioEconomicGoals != ''">
				(socioEconomicGoals = #{socioEconomicGoals})
			</if>
			<if test="auditStatus != null and auditStatus != ''">
				(auditStatus = #{auditStatus})
			</if>
			<if test="remarks != null and remarks != ''">
				(remarks = #{remarks})
			</if>
			<if test="titleOfPersonInCharge != null and titleOfPersonInCharge != ''">
				(titleOfPersonInCharge = #{titleOfPersonInCharge})
			</if>
			<if test="startStopTime != null and startStopTime != ''">
				(startStopTime = #{startStopTime})
			</if>
			<if test="arrivalExpenses != null and arrivalExpenses != ''">
				(arrivalExpenses = #{arrivalExpenses})
			</if>
			<if test="expenditure != null and expenditure != ''">
				(expenditure = #{expenditure})
			</if>
			<if test="managementFees != null and managementFees != ''">
				(managementFees = #{managementFees})
			</if>
		</where>
	</select>

	<select id="list" parameterType="Map" resultType="ProjectApproval">
		select * from projectApproval
		<!--order by ${sort} ${order} -->
	</select>
</mapper>
